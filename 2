package com.example.xiaolong.myapplication;

import android.util.Xml;

import com.example.xiaolong.myapplication.ConfigureData;

import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;

import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;

/**
 * Created by Xiaolong on 2016/8/28.
 */
public class XmlParser {
    public static ConfigureData parseXML(InputStream in)
            throws XmlPullParserException, IOException {

        XmlPullParser pullParser = Xml.newPullParser();
        pullParser.setInput(in, "UTF-8");
        ConfigureData data = null;
        ConfigureData.HourItem hourItem = null;
        ConfigureData.WeightItem weightItem = null;

        int event = pullParser.getEventType();
        while (event != XmlPullParser.END_DOCUMENT) {
            switch (event) {
                case XmlPullParser.START_DOCUMENT:
                    data = new ConfigureData();
                    break;
                case XmlPullParser.START_TAG:
                    if ("version".equals(pullParser.getName())) {
                        if(data != null)
                        data.version = pullParser.nextText();
                    }
                    if ("id".equals(pullParser.getName())) {
                        if(data != null)
                            data.id = pullParser.nextText();
                    }
                    if ("date".equals(pullParser.getName())) {
                        if(data != null)
                            data.date = pullParser.nextText();
                    }
                    if ("total_capacity".equals(pullParser.getName())) {
                        if(data != null)
                            data.total_capacity = Integer.parseInt(pullParser.nextText());
                    }
                    if ("total_click".equals(pullParser.getName())) {
                        if(data != null)
                            data.total_click = Integer.parseInt(pullParser.nextText());
                    }

                    if ("detail_in_hour".equals(pullParser.getName())) {
                        if(data != null) {
                            data.detail_in_hour = new ArrayList<ConfigureData.HourItem>();

                        }
                    }
                    if ("hour_item".equals(pullParser.getName())) {
                        hourItem = new ConfigureData.HourItem();
                    }
                    if ("hour".equals(pullParser.getName())) {
                        if(hourItem != null) {
                            hourItem.hour = Integer.parseInt(pullParser.nextText());
                        }
                    }
                    if ("hour_capacity".equals(pullParser.getName())) {
                        if(hourItem != null) {
                            hourItem.hour_capacity = Integer.parseInt(pullParser.nextText());
                        }
                    }
                    if ("hour_click".equals(pullParser.getName())) {
                        if(hourItem != null ) {
                            hourItem.hour_click = Integer.parseInt(pullParser.nextText());
                        }
                    }
                    if ("thread_num".equals(pullParser.getName())) {
                        if(data != null)
                            data.thread_num = Integer.parseInt(pullParser.nextText());
                    }
                    /*
                    if ("start_hour".equals(pullParser.getName())) {
                        if(data != null)
                            data.start_hour = Integer.parseInt(pullParser.nextText());
                    }
                    if ("stop_hour".equals(pullParser.getName())) {
                        if(data != null)
                            data.stop_hour = Integer.parseInt(pullParser.nextText());
                    }
                    if ("weights".equals(pullParser.getName())) {
                        if(data != null) {
                            data.weights = new ArrayList<ConfigureData.WeightItem>();
                        }
                    }
                    if ("weight_item".equals(pullParser.getName())) {
                            weightItem = new ConfigureData.WeightItem();
                    }
                    if ("hours".equals(pullParser.getName())) {
                        if(weightItem != null ) {
                            String hours = pullParser.nextText();
                            String[] hoursArray = hours.split(",");
                            int [] hours_number = new int[hoursArray.length];
                            for(int i = 0 ;i<hoursArray.length;i++){
                                hours_number[i] = Integer.parseInt( hoursArray[i]);
                            }
                            weightItem.hours = hours_number;
                        }
                    }
                    if ("weight".equals(pullParser.getName())) {
                        if(weightItem != null ) {
                            weightItem.weight =  Integer.parseInt(pullParser.nextText());
                        }
                    }

                    if ("click_percent".equals(pullParser.getName())) {
                        if(data != null)
                            data.click_percent = Double.parseDouble(pullParser.nextText());
                    }
                    */
                    if ("exposure_link".equals(pullParser.getName())) {
                        if(data != null) {
                            String link_data = pullParser.nextText();
                            String link = link_data;//(String)link_data.subSequence(8,(link_data.length()-2));
                            data.exposure_link = link;
                        }
                    }
                    if ("click_link".equals(pullParser.getName())) {
                        if(data != null) {
                            String link_data = pullParser.nextText();
                            String link = link_data;//(String)link_data.subSequence(8,(link_data.length()-2));
                            data.click_link = link;
                        }
                    }
                    if ("mac_files".equals(pullParser.getName())) {
                        if(data != null) {
                            data.mac_files = new ArrayList<String>();
                        }
                    }
                    if ("file".equals(pullParser.getName())) {
                        if(data != null && data.mac_files != null) {
                            data.mac_files.add(pullParser.nextText());
                        }
                    }
                    break;
                case XmlPullParser.END_TAG:
                    if ("hour_item".equals(pullParser.getName())) {
                        if(hourItem!=null) {
                            data.detail_in_hour.add(hourItem);
                        }
                        hourItem = null;
                    }
                    /*
                    if ("weight_item".equals(pullParser.getName())) {
                        if(weightItem!=null) {
                            data.weights.add(weightItem);
                        }
                        weightItem = null;
                    }
                    */
                    break;

            }
            event = pullParser.next();
        }
        return data;
    }
}
